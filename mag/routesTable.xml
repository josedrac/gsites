<?xml version="1.0" encoding="UTF-8" ?>
<Module>
  <ModulePrefs title="routes-table.xml">
    <Require feature="idi" />
    <Require feature="locked-domain" />
	  <Require feature="dynamic-height" />
	  <Require feature="setprefs" />
  </ModulePrefs>
  <UserPref name="spreadsheet_key" default_value="" display_name="Spreadsheet key" required="true" />
  <Content type="html">
    <![CDATA[
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.1/css/bootstrap.min.css" />
  <link rel="stylesheet" href="https://cdn.datatables.net/1.10.18/css/dataTables.bootstrap4.min.css" />

  <script type="text/javascript" src="https://cdn.rawgit.com/josedrac/gsites/master/mag/js/jQuery.js"></script>
  <script type="text/javascript" src="https://cdn.datatables.net/1.10.18/js/jquery.dataTables.min.js"></script>
  <script type="text/javascript" src="https://cdn.datatables.net/1.10.18/js/dataTables.bootstrap4.min.js"></script>

  <style type="text/css">
    .formative-content-cell img.bbva-icon {
      width: 47px;
      margin-right: 2px;
    }

  </style>

  <div class="filters row">
    <div class="col-auto">
      <input type="text" id="global-filter" class="form-control" placeholder="Filtrar operativas" />
    </div>
    <div class="col-auto form-check form-check-inline">
      <input class="form-check-input" type="checkbox" id="formative-content-check" />
      <label class="form-check-label" for="formative-content-check">Con contenido formativo</label>
    </div>
  </div>
  <table class="routes-table table table-striped table-bordered">
    <thead>
      <tr class="bg-primary text-light">
        <th class="text-center align-middle">Operativa</th>
        <th>Descripción</th>
        <th class="text-center align-middle">Contenido formativo</th>
        <th>Tipo de contenido</th>
        <th class="text-center align-middle">+info</th>
        <th>Tags</th>
      </tr>
    </thead>
  </table>

  <script type="text/javascript">
    var prefs = new _IG_Prefs(),
      routesTableSel = '.routes-table',
      globalFilterSel = '#global-filter',
      formativeContentCheckSel = '#formative-content-check';

    // Use a symbol that is unlikely to be used in global searches
    var formativeContentSearchSymbol = '┤';

    const indexOf = {
      OPERATIVE:{
        TITLE: 0,
        DESCRIPTION: 1,
        FORMATIVE_CONTENT: 2,
        CONTENT_TYPE: 3,
        MORE_INFO: 4,
        TAGS: 5,
        ID: 6,
        FORMATIONS_ARRAY: 7
      },
      FORMATION: {
        ID: 0,
        TITLE: 1,
        LINK: 2,
        TYPE_CONTENT: 3,
        ID_OPERATIVE: 4
      },
      PAGE:{
        OPERATIVES: 0,
        FORMATIONS: 1034925399
      }
    }

    $(document).ready(function() {
      loadRoutesTable();
      $(globalFilterSel).keyup(applyGlobalFilter);
      $(formativeContentCheckSel).click(applyFormativeContentFilter);
      $(routesTableSel).on('draw.dt', gadgets.window.adjustHeight);
    });

    function loadRoutesTable() {
      var routesTableAjaxRequest = {
        type: 'GET',
        url:
          'https://script.google.com/a/bbva.com/macros/s/AKfycbxVevzQgc7veASuhYIysBwkqR1QRxkkzrkU6rBVtLvIZo8eoqYT/exec',
        data: { key: getSpreadsheetKey() , sheetIDs: JSON.stringify(["0","1034925399"])},
        dataType: 'jsonp',
        crossDomain: true,
        jsonpCallback: 'on_result',
        dataSrc: function(data) {
          let formattedData = formatData(data);
          return formattedData;
        },
        error: function(error) {
          console.log(error);
        },
      };

      function formatData(data) {
        var operatives = data[indexOf.PAGE.OPERATIVES].data;
        var formations = data[indexOf.PAGE.FORMATIONS].data;
        operatives.splice(0, 1);

        operatives.forEach(function(operative) {
          var formationsArray = [];
          formationsArray = formations.filter(formation => formation[indexOf.FORMATION.ID_OPERATIVE] === operative[indexOf.OPERATIVE.ID]);
          operative[indexOf.OPERATIVE.FORMATIONS_ARRAY] = formationsArray;
        });
        console.log(operatives);
        return operatives;
      }

      $(routesTableSel).DataTable({
        columnDefs: [
          {
            targets: [indexOf.OPERATIVE.TITLE],
            render: renderOperativeColumn,
          },
          {
            targets: [indexOf.OPERATIVE.FORMATIVE_CONTENT],
            className: 'formative-content-cell text-center align-middle',
            width: '120px',
            render: renderFormativeContentColumnByList,
          },
          {
            targets: [indexOf.OPERATIVE.MORE_INFO],
            className: 'text-center align-middle',
            width: '80px',
            render: renderSeeMoreColumn,
          },
          {
            targets: [indexOf.OPERATIVE.CONTENT_TYPE, indexOf.OPERATIVE.MORE_INFO],
            searchable: false,
          },
          {
            targets: [indexOf.OPERATIVE.DESCRIPTION, indexOf.OPERATIVE.CONTENT_TYPE, indexOf.OPERATIVE.TAGS],
            visible: false,
          },
        ],
        ajax: routesTableAjaxRequest,
        pageLength: 20,
        lengthChange: false,
        ordering: false,
        autoWidth: false,
        dom: "<'row'<'col-sm-12'tr>><'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
        language: {
          url: 'https://cdn.datatables.net/plug-ins/1.10.19/i18n/Spanish.json',
        },
      });
    }

    function applyGlobalFilter() {
      var filterValue = $(globalFilterSel).val();

      $(routesTableSel)
        .DataTable()
        .search(filterValue)
        .draw();
    }

    function applyFormativeContentFilter() {
      var isFilterChecked = $(formativeContentCheckSel).prop('checked');
      var regex = isFilterChecked ? formativeContentSearchSymbol : '';

      $(routesTableSel)
        .DataTable()
        .column(indexOf.OPERATIVE.FORMATIVE_CONTENT)
        .search(regex)
        .draw();
    }

    function renderOperativeColumn(title, callType, row) {
          var description = row[indexOf.OPERATIVE.DESCRIPTION];
      return '<h6 class="text-primary">' + title + '</h6><p>' + description.replace(/\n/g, '<br>') + '</p>';
    }

    var contentTypeIconIds = {
      'guia-rapida': '1Vdgm7LO2NLsCOYe0ZjoerlCzf4ylhxFy',
      manual: '14O-NO_XM2bSOXPUbUDf4X5qz1VqovfJn',
      'documentacion-adicional': '1bYvyPPpEZAnlRVlGtcBsSMceGsA1BaSY',
      imagen: '1Ri0ltxKs-InQgzGdcUMrnlWwuTvxVeEy',
      enlace: '14CB_PGKpma0CiVAw7EXt3O79Pz5XOkSp',
      video: '1SrMG_zGP02KbhI1nR3SSCFS4HJmAoymQ',
      default: '1bYvyPPpEZAnlRVlGtcBsSMceGsA1BaSY',
    };

    function renderFormativeContentColumnByList(link, callType, row) {
      if (callType === 'filter') {
        return getValueIfArrayNotEmpty(row[indexOf.OPERATIVE.FORMATIONS_ARRAY], formativeContentSearchSymbol);
      }

      var contentLink;  
      row[indexOf.OPERATIVE.FORMATIONS_ARRAY].forEach(function(formation) {
        var iconId = contentTypeIconIds[formation[indexOf.FORMATION.TYPE_CONTENT]] || contentTypeIconIds.default;
        var iconUrl = 'https://drive.google.com/a/bbva.com/uc?authuser=3&id=' + iconId + '&export=download';
        const existFormationLink = formation[indexOf.FORMATION.LINK] !== "";

        if(existFormationLink && contentLink === undefined){
          contentLink = '<a target="_blank" href="' + formation[indexOf.FORMATION.LINK] + '"><img class="bbva-icon" src="' + iconUrl + '"/></a>';
        } else if (existFormationLink) {
          contentLink = contentLink + '<a target="_blank" href="' + formation[indexOf.FORMATION.LINK] + '"><img class="bbva-icon" src="' + iconUrl + '"/></a>';
        }
      });

      return getValueIfArrayNotEmpty(row[indexOf.OPERATIVE.FORMATIONS_ARRAY], contentLink);
    }

    function renderSeeMoreColumn(link) {
      return getValueIfNotEmpty(link, '<a target="_blank" href="' + link + '">ver más</a>');
    }

    function getValueIfNotEmpty(stringToCheck, value) {
      return stringToCheck.trim() ? value : '';
    }

    function getValueIfArrayNotEmpty(arrayToCheck, value) {
      return arrayToCheck.length  > 0 ? value : '';
    }

    function getSpreadsheetKey() {
      return prefs.getString('spreadsheet_key');
    }
  </script>
    ]]>
  </Content>
</Module>
