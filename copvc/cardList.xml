<?xml version="1.0" encoding="UTF-8" ?>
<Module>
  <ModulePrefs title="COPVC-cardList.xml">
    <Require feature="idi"/>
    <Require feature="locked-domain" />
	<Require feature="dynamic-height"/>
	<Require feature="setprefs" />
  </ModulePrefs>
  <UserPref name="spreadsheet_key" default_value="" display_name="Spreadsheet key" required="true" />
  <UserPref name="lang" display_name="Language (es|en)" default_value="es" datatype="enum" >
    <EnumValue value="es" />
    <EnumValue value="en" />
  </UserPref>
  <Content type="html">
    <![CDATA[
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" />
	<script src="https://www.google.com/jsapi" type="text/javascript"></script>
    <script src="https://cdn.rawgit.com/josedrac/gsites/test-oauth/evolucionaDigital/js/environment.js" type="text/javascript"></script>
    <script src="https://cdn.rawgit.com/sopraux/gsites/v1.0/evolucionaDigital/js/jquery.min.js" type="text/javascript"></script>
	<script src="https://cdn.rawgit.com/sopraux/gsites/v1.0/evolucionaDigital/js/smartpaginator.js" type="text/javascript"></script>

    <style type="text/css">
		@font-face {
			font-family: 'BBVA Web Book';
			src:url('https://cdn.rawgit.com/sopraux/gsites/v1.0/gsites-components/fonts/web-book/web-book.eot');
			src:url('https://cdn.rawgit.com/sopraux/gsites/v1.0/gsites-components/fonts/web-book/web-book.eot?iefix') format("embedded-opentype"),
			url('https://cdn.rawgit.com/sopraux/gsites/v1.0/gsites-components/fonts/web-book/web-book.woff') format("woff"),
			url('https://cdn.rawgit.com/sopraux/gsites/v1.0/gsites-components/fonts/web-book/web-book.ttf') format("truetype"),
			url('https://cdn.rawgit.com/sopraux/gsites/v1.0/gsites-components/fonts/web-book/web-book.svg#BBVA Web Book') format("svg");
			font-style: normal;
			font-weight: normal;
		}

		.flag:before {
			content: "";
			position: absolute;
			display: inline-block;
			width: 15px;
			height: 15px;
			left: -20px;
		    background-size: contain;
		    background-position: 50%;
		    background-repeat: no-repeat;
		}
		.flag-spain:before {
			background-image: url(https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/2.9.0/flags/1x1/es.svg);
		}
		.flag-usa:before {
			background-image: url(https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/2.9.0/flags/1x1/us.svg);
		}
		.flag-mexico:before {
			background-image: url(https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/2.9.0/flags/1x1/mx.svg);
		}
		.flag-turkey:before {
			background-image: url(https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/2.9.0/flags/1x1/tr.svg);
		}
		.flag-colombia:before {
			background-image: url(https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/2.9.0/flags/1x1/co.svg);
		}
		.flag-paraguay:before {
			background-image: url(https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/2.9.0/flags/1x1/py.svg);
		}
		.flag-uruguay:before {
			background-image: url(https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/2.9.0/flags/1x1/uy.svg);
		}
		.flag-argentina:before {
			background-image: url(https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/2.9.0/flags/1x1/ar.svg);
		}
		.flag-peru:before {
			background-image: url(https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/2.9.0/flags/1x1/pe.svg);
		}
		.flag-venezuela:before {
			background-image: url(https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/2.9.0/flags/1x1/ve.svg);
		}
		.icon-spread:before {
			background-image: url(https://raw.githubusercontent.com/josedrac/gsites/copvc/copvc/img/Difundir.png);
		}
		.icon-inculcate:before {
			background-image: url(https://raw.githubusercontent.com/josedrac/gsites/copvc/copvc/img/Inculcar.png);
		}
		.icon-live:before {
			background-image: url(https://raw.githubusercontent.com/josedrac/gsites/copvc/copvc/img/Vivir.png);
		}

		.property-icon:before {
			content: '';
			background-size: contain;
		    background-position: 50%;
		    background-repeat: no-repeat;
			height: 12px;
			width: 12px;
			display: inline-block;
			margin-right: 5px;
		}

		.implemented:before,
		.planned:before,
		.executing:before {
			content: '';
			border-radius: 50%;
			height: 7px;
			width: 7px;
			border: 0.5px solid grey;
			display: inline-block;
			margin-right: 5px;
		}
		.implemented:before {
			background: #1973B8;
		}
		.planned:before {
			background: #D4EDFC;
		}
		.executing:before {
			background: #49A5E6;
		}

        .cards {
            width: 100%;
        }

		.cards__list {
			font-family: 'BBVA Web Book';
			padding: 0;
			list-style: none;
		}

		.card-block {
		    border-bottom: 1px solid #E5E5E5;
		    display: inline-block;
		    width: 100%;
		    float: left;
		}
		.card-block:nth-child(4n),
		.card-block:last-child {
			border-bottom: 0;
		}

		.card {
			font-size: 14px;
			padding: 20px 10px;
			float: left;
			width: calc(50% - 10px);
		}
		.card:first-child {
			padding-left: 0;
		}
		.card:last-child {
			padding-right: 0;
		}

		.card__content {
			position: relative;
			border: 1px solid darkgrey;
		}

		.card__top-content {
			padding: 20px 20px 20px 30px;
			background: #00487d;
			color: #fff;
			position: relative;
			display: -webkit-box;
			display: -ms-flexbox;
			display: flex;
		}

		.card__top-content .fa {
			position: absolute;
			left: 12px;
		}

		.card__bottom-content {
			padding: 20px;
			padding-top: 15px;
			background: #d0edf8;
		}

		.card__name {
			font-weight: bold;
			white-space: nowrap;
			text-overflow: ellipsis;
			overflow: hidden;
			margin-right: 25px;
		}

		.card__country {
			white-space: nowrap;
			margin-left: auto;
			position: relative;
		}

		.card__description {
			display: block;
			/* Fallback for non-webkit */
			display: -webkit-box;
			-webkit-line-clamp: 3;
			-webkit-box-orient: vertical;
			height: 48px;
			text-overflow: ellipsis;
			overflow: hidden;
			margin-top: 0;
		}

		.card__properties {
			padding-left: 15px;
    		list-style: disc;
		}

		.card__property {
		    margin-bottom: 10px;
		}

		.card__property-name {
			width: 80px;
			float: left;
		}
		.card__property-value {
			float: left;
			white-space: nowrap;
		    text-overflow: ellipsis;
		    overflow: hidden;
		    display: inline-block;
		    width: calc(100% - 80px);
		}

		.card__link {
			position: relative;
			display: inline-block;
			height: 15px;
			font-family: arial, sans-serif;
			text-decoration: none;
			color: #0072C9;
		}
		.card__link:visited {
			color: #0072C9;
		}
		.card__link .fa {
			position: absolute;
			padding-left: 5px;
			top: 2px;
		}

		a.card__contact {
			color: #1271b5;
			position: absolute;
			right: 20px;
			bottom: 20px;
		}

        .empty-results {
            font-family: arial, sans-serif;
		    padding: 0 30px;
        }

		span.click {
			color: #0078d2;
			text-decoration: none;
			cursor: pointer;
		}

		.controls {
			text-align: right;
			max-width: 969px;
			padding: 0 10px 5px 0;
		}

		.pager {
		    height: 30px;
		    text-align: center;
		    display: table;
		}
		.pager ul {
		    list-style: none;
		    padding: 0;
		    margin: 0;
		    text-aling: center;
		    display: table-cell;
		    vertical-align: middle;
		}
		.pager ul li {
		    display: inline;
		    margin-left: 2px;
		}
		.pager ul li a {
		    text-decoration: none;
		    font-weight: bold;
		    display: inline-table;
		    width: 20px;
		    height: 18px;
		    text-align: center;
		    border-radius: 4px;
		    -moz-border-radius: 4px;
		}
		.pager span {
		    margin-left: 4px;
		    color: White;
		    float: left;
		}
		.pager .btn {
		    width: 40px;
		    text-align: center;
		    display: table-cell;
		    vertical-align: middle;
		    cursor: pointer;
		}
		.pager .disabled {
		    color: #A0A0A0 !important;
		    text-shadow: 1px 1px 1px #FFFFFF;
		}
		.black.normal {
		    background-color: #FFFFFF;
		    color: #0072C9;
		    border: solid 1px #d2e5eb;
		}
		.black.active {
		    background-color: #0072C9;
		    color: #FFFFFF;
		    border: solid 1px #0072C9;
		}
		.checkpage img,
		.checkpage1 img,
		.bloqueAnterior img,
		.bloqueSiguiente img{
			border: 0;
		}
		button{
			background: #0079C1;
		}
    </style>

	<div class="cards">

	    <div id="cardsList" class="cards__list"></div>

		<div id='pagination' class="pagination" style='margin: auto;'></div>

	</div>

	<div id="empty_results" class="empty-results"></div>

    <script type="text/javascript">
        var prefs = new _IG_Prefs(),
			contextLangs = {
				es: {
					sheetIndex: 0,
					cardProperties: {
						country: 'País',
						name: 'Nombre',
						description: 'Descripción',
						goal: 'Objetivo',
						category: 'Categoría',
						status: 'Estado',
						link: 'Enlace al repositorio'
					},
					goals: {
						spread: 'Difundir',
						inculcate: 'Inculcar',
						live: 'Vivir'
					},
					countries: {
						spain: 'España',
						usa: 'USA',
						mexico: 'México',
						turkey: 'Turquía',
						colombia: 'Colombia',
						paraguay: 'Paraguay',
						uruguay: 'Uruguay',
						argentina: 'Argentina',
						peru: 'Perú',
						venezuela: 'Venezuela'
					},
					sheetId: '361022424',
					countryManagerLiteral: 'Country Manager / Director de Área',
					implemented: 'Implementada',
					planned: 'Planificada',
					inExecution: 'En ejecución',
					linkText: 'Enlace',
					emptyResults: 'No se han encontrado resultados para los filtros seleccionados.'
				},
				en: {
					sheetIndex: 1,
					cardProperties: {
						country: 'Country',
						name: 'Name',
						description: 'Description',
						goal: 'Goal',
						category: 'Category',
						status: 'Status',
						link: 'Link to the Repository'
					},
					goals: {
						spread: 'Spread',
						inculcate: 'Inculcate',
						live: 'Live'
					},
					countries: {
						spain: 'Spain',
						usa: 'USA',
						mexico: 'Mexico',
						turkey: 'Turkey',
						colombia: 'Colombia',
						paraguay: 'Paraguay',
						uruguay: 'Uruguay',
						argentina: 'Argentina',
						peru: 'Peru',
						venezuela: 'Venezuela'
					},
					sheetId: '2113943508',
					countryManagerLiteral: 'Country Manager / Area Director',
					implemented: 'Implemented',
					planned: 'Planned',
					inExecution: 'In execution',
					linkText: 'Link',
					emptyResults: 'No results found for the selected filters.'
				}
			},
			contextVars = contextLangs[ getLang() ],
			params = {
				globalSearch: {	},
				nameInitiative: {
					col: 3
				},
				description: {
					col: 4
				},
				goal: {
					col: 1
				},
				status: {
					col: 7
				},
				category: {
					col: 2
				},
				country: {
					col: 15
				},
				promoter: {
					col: 16
				}
			},
			colIndex = {
				country: 15,
				name: 3,
				promoter: 16,
				description: 4,
				goal: 1,
				category: 2,
				status: 7,
				link: 8,
				contact: 19
			},
			gadgetHelper = null;

		initFilterParams();
		loadVisualizationAPI();


	 	function loadVisualizationAPI() {
			google.load("visualization", "1", {"packages": ["table"]});
			google.setOnLoadCallback(sendQuery);
		}

        function pagination(elements) {
	        $('#pagination').smartpaginator({
		        totalrecords: elements,
		        recordsperpage: 4,
		        length: 4,
		        datacontainer: 'cardsList',
		        dataelement: '.card-block',
		        initval: 0,
	        });
	    }

		function getDataFiltered(dataRows) {
     		var filter 	= 'select * where C IS NOT NULL';

     		if (isSearchDone()) {
				dataRows = dataRows.filter(function(row) {
					return hasAllFilters(row);
				});
 			}

			return dataRows;
     	}

		function hasAllFilters(row) {
			var hasAllFilters = true;
			var globalSearch = true;

			Object.keys(params).forEach(function(key) {
				var param = params[key];
				if (param.value) {
					if (key === 'globalSearch') {
						globalSearch = hasGlobalSearchConditions(row, param.value.toLowerCase());
					}
					else if (row[ param.col ].toLowerCase().indexOf( param.value.toLowerCase() ) === -1) {
						return hasAllFilters = false;
					}
				}
			});

            return hasAllFilters && globalSearch;
		}

		function hasGlobalSearchConditions(row, value) {
			var words 	= value.split(' '),
				cols 	= [1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 18, 19],
				filter 	= '',
				hasCondition = false,
				haveAllWords;

			cols.forEach(function(col, index) {
				haveAllWords = true;
				words.forEach(function(word, wordIndex) {
					if (row[ col ].toLowerCase().indexOf(word) === -1) {
						return haveAllWords = false;
					}
				});
				if (haveAllWords) {
					return hasCondition = true;
				}
			});
			return hasCondition;
		}

        function sendQuery() {

			var dataForm = {
				'key': getSpreadsheetKey(),
				'sheetIndex': contextVars.sheetIndex
			};

			$.ajax({
				type: 'GET',
				url: 'https://script.google.com/a/bbva.com/macros/s/AKfycbyUHqliB455rjeTHt5m8OCXQtWSfiN1xP8aqGTUVcOddCzNOHU/exec',
				data: dataForm,
				dataType: 'jsonp',
				crossDomain: true,
				jsonpCallback: "on_result",
				success: function (data) {
					//Eliminamos las primeras filas ya que no son necesarias
					data.splice(0, 7);
					console.log(data);
					handleQueryResponse(data);
				},
				error: function () {
					console.log('error');
				}
			});

        }

        function handleQueryResponse(response) {
			data = getDataFiltered(response);
			if (data) {
				createCards(data);
				gadgets.window.adjustHeight();
			}
        }

		function getDataValue(rowIndex, key) {
			return data[rowIndex][ colIndex[key] ];
		}

		function getPropertyRow(rowIndex, key, cssClass) {
			cssClass = cssClass || '';
			var html = 	'<label class="card__property-name">'+ contextVars.cardProperties[key] +':</label>' +
						'<span class="card__property-value '+ cssClass +'">'+ (getDataValue(rowIndex, key) || '-') +'</span>';
			return html;
		}

		function createCards(data) {
			var numberOfRows 	= data.length,
				linkText 		= contextVars.cardProperties.link,
				html 			= '';

			for (var rowIndex = 0; rowIndex < numberOfRows; rowIndex++) {
				var status	 	= getDataValue(rowIndex, 'status'),
					goal 		= getDataValue(rowIndex, 'goal'),
					country 	= getDataValue(rowIndex, 'country'),
					contact 	= getDataValue(rowIndex, 'contact'),
					statusCss 	= getItemCssClass( status ),
					goalCss 	= getItemCssClass( goal ),
					countryCss 	= 'card__country ' + getItemCssClass( country ),
					isCountryManager = getDataValue(rowIndex, 'promoter') === contextVars.countryManagerLiteral,
					starMarkup	= isCountryManager ? '<span class="fa fa-star"></span>' : '';

				if (rowIndex % 2 === 0) {
					html += '<div class="card-block">';
				}

				html += '<div class="card">' +
						'	<div class="card__content">' +
						'		<div class="card__top-content">' +
						'			<label class="card__name">' + starMarkup + getDataValue(rowIndex, 'name') + '</label>' +
						'			<span class="'+ countryCss +'">'+ country +'</span>' +
						'		</div>' +
						'		<div class="card__bottom-content">' +
						'			<p class="card__description">'+ getDataValue(rowIndex, 'description') +'</p>' +
						'			<ul class="card__properties">' +
						'				<li class="card__property">'+ getPropertyRow(rowIndex, 'goal', goalCss) +'</li>' +
						'				<li class="card__property">'+ getPropertyRow(rowIndex, 'category') +'</li>' +
						'				<li class="card__property">'+ getPropertyRow(rowIndex, 'status', statusCss) +'</li>' +
						'			</ul>';
				if (contact) {
					html += '		<a class="card__contact" target="_blank" title="' + contact + '" href="https://mail.google.com/mail/?view=cm&fs=1&tf=1&to=' + contact + '"><span class="fa fa-envelope"></span></a>';
				}
				if (status) {
					html += '		<a href="#" class="card__link" onclick="javascript:OpenLink(\''+ getDataValue(rowIndex, 'link') +'\')">'+ linkText +'<i class="fa fa-external-link"></i></a>';
				}
				else {
					html += '		<a href="#" class="card__link"></a>';
				}
				html +=	'		</div>' +
						'	</div>' +
						'</div>';

				if (rowIndex % 2 === 1) {
					html += '</div>';
				}
			}

			$('#cardsList').html(html);

			if (numberOfRows) {
				pagination( Math.ceil(numberOfRows/2) );
				return;
			}

			html += '<span class="empty-results__text">'+ contextVars.emptyResults +'</span>';
			$('#empty_results').html(html);
		}

		function getItemCssClass(value) {
			if (value === contextVars.implemented) 	{ return 'implemented'; }
			if (value === contextVars.planned) 		{ return 'planned'; }
			if (value === contextVars.inExecution)	{ return 'executing'; }

			var goals = contextVars.goals;

			if (value === goals.spread) 	{ return 'property-icon icon-spread'; }
			if (value === goals.inculcate) 	{ return 'property-icon icon-inculcate'; }
			if (value === goals.live) 		{ return 'property-icon icon-live'; }

			var countries = contextVars.countries;

			if (value === countries.spain) 		{ return 'flag flag-spain'; }
			if (value === countries.usa) 		{ return 'flag flag-usa'; }
			if (value === countries.mexico) 	{ return 'flag flag-mexico'; }
			if (value === countries.turkey) 	{ return 'flag flag-turkey'; }
			if (value === countries.colombia) 	{ return 'flag flag-colombia'; }
			if (value === countries.paraguay) 	{ return 'flag flag-paraguay'; }
			if (value === countries.uruguay) 	{ return 'flag flag-uruguay'; }
			if (value === countries.argentina) 	{ return 'flag flag-argentina'; }
			if (value === countries.peru) 		{ return 'flag flag-peru'; }
			if (value === countries.venezuela) 	{ return 'flag flag-venezuela'; }

			return '';
		}

		function getLang() {
			return prefs.getString('lang');
		}

		function getUrl() {
			return document.referrer;
		}

		function getSpreadsheetKey() {
	        return prefs.getString('spreadsheet_key');
		}

        function isSearchDone() {
            return getUrl().split("=").length >= 2;
        }

        function initFilterParams() {
            var urlParam,
				url = getUrl().split('?'),
                listParams = url.length > 1 ? url[1].split('&') : [];

            listParams.forEach(function(item) {
                urlParam = decodeURIComponent(item).split('+').join(' ').trim().split('=');
				if (urlParam.length > 1 && params.hasOwnProperty( urlParam[0] )){
					params[ urlParam[0] ].value = urlParam[1];
				}
            });
        }

		function OpenLink(link) {
			window.open(link,'_new');
            return false;
		}

    </script>
    ]]>
  </Content>

</Module>
